// Привет, приятель!
//
//     Вы — предводитель небольшой пиратской команды. И у вас есть план. С помощью ООП вы хотите создать довольно эффективную систему для поиска кораблей с богатой добычей на борту!
//
//     К несчастью для вас, в наши дни люди весят очень много, так как же узнать, что корабль полон золота, а не людей?
//
//     Вы начинаете с написания универсального класса / структуры корабля:
//
//     class Ship {
//         constructor(draft, crew) {
//             this.draft = draft
//             this.crew = crew
//         }
//     }
// Каждый раз, когда ваши шпионы видят, как в док заходит новый корабль, они создают новый объект «корабль» на основе своих наблюдений:
//
//     Осадка — оценка веса судна, основанная на том, насколько низко оно погружено в воду
// экипаж - количество членов экипажа на борту
// const titanic = new Ship(15, 10);
// Задача
// У вас есть доступ к «осадке» и «экипажу» корабля. «Осадка» — это общий вес корабля, а «экипаж» — количество людей на корабле.
//
//     Каждый член экипажа добавляет 1.5 единиц к осадке корабля. Если после вычета веса экипажа осадка всё равно больше 20, то корабль стоит разграбить. На любом корабле такого веса должно быть много добычи!
//
//     Добавьте метод
//
// isWorthIt
// чтобы решить, достоин ли корабль добычи. Например:

// titanic.isWorthIt() // return false
// Удачи и пусть вы найдете GOOOLD!



class Ship {
    constructor(draft, crew) {
        this.draft = draft
        this.crew = crew
    }
    isWorthIt() {
        let calculation = this.draft - 1.5 * this.crew;
        return calculation > 20;
    }
}
const titanic =  new Ship(15, 10);
console.log(titanic.isWorthIt());
